trigger:
  batch: true
  branches:
    include:
      - "*"
  paths:
    include:
      - exporter/*
      - azure-pipelines.yml
      - requirements.txt
      - Dockerfile

pr: none

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  IMAGE_NAME: chelnak/status-cake-exporter

steps:

- task: gitversion/setup@0
  displayName: Install GitVersion
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: Use GitVersion
  inputs:
    useConfigFile: true
    configFilePath: 'GitVersion.yml'

- task: Docker@1
  displayName: Build image
  inputs:
    command: Build an image
    imageName: $(IMAGE_NAME)
    dockerFile: Dockerfile
    addDefaultLabels: false

- task: Docker@1
  displayName: Tag image with current build number $(Build.BuildNumber)
  inputs:
    command: Tag image
    imageName: $(IMAGE_NAME)
    arguments: $(IMAGE_NAME):$(Build.BuildNumber)

- task: Docker@1
  displayName: Docker Hub login
  inputs:
    command: login
    containerregistrytype: Container Registry
    dockerRegistryEndpoint: Docker Hub

- task: Docker@1
  displayName: Push tagged image
  inputs:
    command: Push an image
    imageName: $(IMAGE_NAME):$(Build.BuildNumber)

- task: Docker@1
  displayName: Push tagged image (latest) if master
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: Push an image
    imageName: '$(IMAGE_NAME):latest'

- task: GitHubRelease@0
  displayName: Create a GitHub GitHubRelease
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    gitHubConnection: 'chelnak'
    repositoryName: 'chelnak/status-cake-exporter'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'manual'
    tag: '$(Build.BuildNumber)'
